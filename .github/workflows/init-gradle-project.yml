name: Build APK with Init Gradle (Safe)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: temurin

    - name: Initialize Gradle Wrapper
      run: |
        mkdir -p gradle/wrapper
        if [ ! -f gradle/wrapper/gradle-wrapper.properties ]; then
          echo "distributionBase=GRADLE_USER_HOME" > gradle/wrapper/gradle-wrapper.properties
          echo "distributionPath=wrapper/dists" >> gradle/wrapper/gradle-wrapper.properties
          echo "distributionUrl=https\\://services.gradle.org/distributions/gradle-8.7-bin.zip" >> gradle/wrapper/gradle-wrapper.properties
          echo "zipStorePath=wrapper/dists" >> gradle/wrapper/gradle-wrapper.properties
          echo "zipStoreBase=GRADLE_USER_HOME" >> gradle/wrapper/gradle-wrapper.properties
        fi
        [ -f gradle/wrapper/gradle-wrapper.jar ] || curl -sLo gradle/wrapper/gradle-wrapper.jar https://github.com/gradle/gradle/raw/master/subprojects/wrapper/src/test/resources/org/gradle/cli/fixtures/gradle-wrapper.jar
        [ -f gradlew ] || curl -sLo gradlew https://raw.githubusercontent.com/gradle/gradle/master/gradlew && chmod +x gradlew
        [ -f gradlew.bat ] || curl -sLo gradlew.bat https://raw.githubusercontent.com/gradle/gradle/master/gradlew.bat

    - name: Generate settings.gradle
      run: |
        if [ ! -f settings.gradle ]; then
          echo 'rootProject.name = "AltKeyInterceptor"' > settings.gradle
          echo 'include(":app")' >> settings.gradle
        fi

    - name: Generate top-level build.gradle
      run: |
        if [ ! -f build.gradle ]; then
          echo "buildscript {" > build.gradle
          echo "    repositories { google(); mavenCentral() }" >> build.gradle
          echo "    dependencies { classpath 'com.android.tools.build:gradle:8.1.1' }" >> build.gradle
          echo "}" >> build.gradle
          echo "allprojects { repositories { google(); mavenCentral() } }" >> build.gradle
        fi

    - name: Generate app/build.gradle
      run: |
        mkdir -p app
        if [ ! -f app/build.gradle ]; then
          echo "plugins { id 'com.android.application' }" > app/build.gradle
          echo "android {" >> app/build.gradle
          echo "  namespace 'com.example.altkeyinterceptor'" >> app/build.gradle
          echo "  compileSdk 34" >> app/build.gradle
          echo "  defaultConfig {" >> app/build.gradle
          echo "    applicationId 'com.example.altkeyinterceptor'" >> app/build.gradle
          echo "    minSdk 24" >> app/build.gradle
          echo "    targetSdk 34" >> app/build.gradle
          echo "    versionCode 1" >> app/build.gradle
          echo "    versionName '1.0'" >> app/build.gradle
          echo "  }" >> app/build.gradle
          echo "  buildTypes {" >> app/build.gradle
          echo "    release {" >> app/build.gradle
          echo "      minifyEnabled false" >> app/build.gradle
          echo "      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'" >> app/build.gradle
          echo "    }" >> app/build.gradle
          echo "  }" >> app/build.gradle
          echo "}" >> app/build.gradle
          echo "dependencies {}" >> app/build.gradle
        fi

    - name: Generate ProGuard config
      run: |
        [ -f app/proguard-rules.pro ] || echo '# Empty proguard config' > app/proguard-rules.pro

    - name: Build APK
      run: ./gradlew assembleDebug

    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: AltKeyInterceptor-APK
        path: app/build/outputs/apk/debug/*.apk
